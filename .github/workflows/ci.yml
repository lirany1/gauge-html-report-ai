name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        check-latest: true
    
    - name: Verify Go installation
      run: go version
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Download dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        fail_ci_if_error: false
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: --timeout=10m

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21
    
    - name: Build
      run: go build -v ./...
    
    - name: Build binary
      run: |
        go build -o gauge-html-report-enhanced ./cmd/html-report-enhanced
    
    - name: Upload binary artifact
      uses: actions/upload-artifact@v4
      with:
        name: gauge-html-report-enhanced
        path: gauge-html-report-enhanced

  demo:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.21
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: gauge-html-report-enhanced
    
    - name: Make binary executable
      run: chmod +x gauge-html-report-enhanced
    
    - name: Generate demo report
      run: |
        mkdir -p demo-output
        # Create a simple demo report (this would normally be from test results)
        echo '<!DOCTYPE html>
        <html>
        <head>
            <title>Gauge HTML Report - Demo</title>
            <meta charset="utf-8">
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; }
                .header { background: #2e7d32; color: white; padding: 20px; text-align: center; }
                .stats { display: flex; justify-content: space-around; margin: 20px 0; }
                .stat { text-align: center; padding: 15px; background: #f5f5f5; border-radius: 5px; }
                .success { color: #2e7d32; }
                .failure { color: #d32f2f; }
            </style>
        </head>
        <body>
            <div class="header">
                <h1>Gauge Enhanced HTML Report</h1>
                <p>AI-Powered Test Report with Analytics</p>
            </div>
            <div class="stats">
                <div class="stat">
                    <h3>Total Tests</h3>
                    <div style="font-size: 2em;">42</div>
                </div>
                <div class="stat">
                    <h3 class="success">Passed</h3>
                    <div style="font-size: 2em; color: #2e7d32;">38</div>
                </div>
                <div class="stat">
                    <h3 class="failure">Failed</h3>
                    <div style="font-size: 2em; color: #d32f2f;">4</div>
                </div>
                <div class="stat">
                    <h3>Success Rate</h3>
                    <div style="font-size: 2em;">90.5%</div>
                </div>
            </div>
            <h2>Features</h2>
            <ul>
                <li>‚ú® AI-powered failure analysis and recommendations</li>
                <li>üìä Advanced analytics and trends</li>
                <li>üîç Smart error grouping and root cause analysis</li>
                <li>üìà Performance metrics and bottleneck detection</li>
                <li>üéØ Flaky test identification</li>
                <li>üì± Responsive design for all devices</li>
            </ul>
        </body>
        </html>' > demo-output/index.html
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./demo-output
        publish_branch: gh-pages